---
- name: Check required variables
  fail: "{{ item }} undefined"
  when: "item is not defined"
  with_items:
    - admin_username
    - admin_password
    - plugins
    - tools


- set_fact:
    restart_timeout: 30
    jenkins_home: /var/lib/jenkins
    admin_cli_cmd: "java -jar /jenkins-cli.jar -s http://localhost:8080 -auth {{ admin_username }}:{{ admin_password }}"


- include_tasks: "packages.yml"


- name: Add an apt key for the jenkins repository
  apt_key:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
    state: present


- name: Add the jenkins repository
  apt_repository:
    repo: deb https://pkg.jenkins.io/debian-stable binary/
    state: present


- name: Install java
  apt:
    name: openjdk-8-jdk-headless
    state: present


- name: Install jenkins
  apt:
    name: jenkins
    state: present


- name: Disable jenkins setup wizard
  replace:
    path: /etc/default/jenkins
    regexp: 'JAVA_ARGS="([^"]+)"'
    replace: 'JAVA_ARGS="\1 -Djenkins.install.runSetupWizard=false"'


- name: create jenkins init scripts directory
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    owner: jenkins
    group: jenkins
    mode: 0755
    state: directory


- name: copying the security setup script
  template:
    src: files/security.groovy.j2
    dest: "{{ jenkins_home }}/init.groovy.d/security.groovy"
    owner: jenkins
    group: jenkins
    mode: 0644


- name: Start jenkins
  service:
    name: jenkins
    state: started


- name: Wait until jenkins is started
  wait_for:
    path: /var/log/jenkins/jenkins.log
    search_regex: Jenkins is fully up and running
    timeout: "{{ restart_timeout }}"


- name: Download jenkins cli jar
  get_url:
    url: http://localhost:8080/jnlpJars/jenkins-cli.jar
    dest: /
    mode: 0440


- set_fact:
    plugins: "{{ plugins + ['job-dsl'] }}"
    when: seed_dsl_path is defined


- set_fact:
    plugins: "{{ plugins + ['custom-tools-plugin'] }}"
    when: tools is not empty


- name: Install plugins
  shell: "{{ admin_cli_cmd }} install-plugin {{ item }}"
  with_items: "{{ plugins }}"


- name: Restart jenkins
  shell: "{{ admin_cli_cmd }} safe-restart"


- name: Wait until jenkins is restarted
  shell: "{{ admin_cli_cmd }} who-am-i"
  ignore_errors: yes
  register: result
  until: "'Authenticated as: admin' in result.stdout"
  delay: 1
  retries: "{{ restart_timeout }}"


- include_tasks: "custom_tools.yml"
  when: tools is not empty


- include_tasks: "seed_job.yml"
  when: seed_dsl_path is defined


